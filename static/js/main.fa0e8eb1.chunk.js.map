{"version":3,"sources":["constants/actionTypes.ts","components/CurrencySwitch/index.tsx","components/AccountPage/SignUpPage.tsx","components/AccountPage/Login.tsx","components/Navbar/index.tsx","components/BasePage/index.tsx","components/ProductDetails/StoreSelectionModal.tsx","components/ProductDetails/index.tsx","Routes.tsx","App.tsx","serviceWorker.ts","index.tsx","generalUtils.ts","reducers/index.ts","reducers/modelReducer.ts","store/index.ts","resource/img/t1.jpg","resource/img/t2.jpg","resource/img/t3.jpg","components/Navbar/fabLogo.png","models/ProductModel.ts","models/BaseModel.ts","actions/modelActions.ts"],"names":["SAVE_INSTANCE","SAVE_ALL_INSTANCE","UPDATE_INSTANCE","DELETE_INSTANCE","DELETE_ALL_INSTANCE","CurrencySwitch","React","isOpen","setOpen","className","name","activeFlag","setActiveFlag","value","data-country","data-currency-symbol","data-display","onClick","tabIndex","id","data-value","SignUpPage","props","Row","Modal","toggle","ModalBody","Col","xs","md","lg","placeholder","Login","tree","navConfig","items","map","item","key","label","displayName","nodes","childCategoriesMain","i","Navbar","useState","setIsOpen","isOpenBurger","setIsOpenBurger","activeItem","setActiveItem","isLogin","isOpenLogin","isSignUp","isOpenSignUp","console","log","color","light","fixed","expand","NavbarBrand","aria-hidden","href","width","src","Logo","alt","data","hasSearch","NavbarToggler","Collapse","navbar","Nav","NavItem","itemData","index","onMouseEnter","repositoryId","onMouseLeave","BasePageImpl","this","children","BasePage","connect","StoreSelectionModal","setModalOpen","storeData","length","store","onStoreClick","storeManager","phoneNo","storeName","operationalDays","operationalTime","ProductDetailsImpl","state","codeErrorStore","availableError","detailHeight","isDeliverable","codeErrorDel","storeError","selectedStore","storeDetails","storePinCode","productDetails","code","sizeScaleProductType","whitePrice","price","images","url","description","onCheckStore","a","Axios","get","status","setState","result","checkAvailability","isNaN","Number","message","cod","furniture","prepaid","match","params","productData","ProductModel","history","push","productCode","split","headers","useQueryString","response","product","settings","infinite","speed","slidesToShow","isIPad","isMobile","slidesToScroll","tImages","tdImg1","tdImg2","tdImg3","onChange","e","target","style","display","x","ProductDetails","withRouter","ownProps","Home","lazy","then","default","SideCarousel","ProductList","WrappedComponent","Component","Routes","HashRouter","Suspense","fallback","Switch","Fragment","Route","exact","path","component","App","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","dispacthAction","action","dispatch","appVersion","toString","toLowerCase","includes","rootReducer","combineReducers","model","OrderedMap","type","instances","instance","modelId","set","merge","delete","deleteAll","createStore","devToolsEnhancer","module","exports","BaseModel","resource","getStoreKey","constructor","identifier","_id","instanceObject","R","getState","filter","toJS"],"mappings":"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","file":"static/js/main.fa0e8eb1.chunk.js","sourcesContent":["export const SAVE_INSTANCE = 'SAVE_INSTANCE';\nexport const SAVE_ALL_INSTANCE = 'SAVE_ALL_INSTANCE';\nexport const UPDATE_INSTANCE = 'UPDATE_INSTANCE';\nexport const DELETE_INSTANCE = 'DELETE_INSTANCE';\nexport const DELETE_ALL_INSTANCE = 'DELETE_ALL_INSTANCE';\n","import * as React from \"react\";\nimport \"./currencySwitch.scss\";\nexport const CurrencySwitch = () => {\n  const [isOpen, setOpen] = React.useState(false);\n  const [activeFlag, setActiveFlag] = React.useState({\n    className: \"flags-India\",\n    name: \"INR\",\n  });\n  return (\n    <div className=\"doubly-wrapper\">\n      <select className=\"currency-switcher right\" name=\"doubly-currencies\">\n        <option\n          value=\"INR\"\n          data-country=\"India\"\n          data-currency-symbol=\"₹\"\n          data-display=\"INR\"\n        >\n          Indian Rupee\n        </option>\n        <option\n          value=\"USD\"\n          data-country=\"United-States\"\n          data-currency-symbol=\"$\"\n          data-display=\"USD\"\n        >\n          US Dollar\n        </option>\n      </select>\n      <div\n        className={`nice-select currency-switcher right slim ${\n          isOpen && \"open\"\n        }`}\n        onClick={() => setOpen(!isOpen)}\n        tabIndex={0}\n        id=\"switcher\"\n      >\n        <span className=\"current notranslate\">\n          <span className={`flags ${activeFlag.className}`}></span> &nbsp;\n          {activeFlag.name}\n        </span>\n        <ul className=\"list\">\n          <li\n            className=\"option notranslate selected\"\n            data-value=\"INR\"\n            data-country=\"India\"\n            data-currency-symbol=\"₹\"\n            data-display=\"INR\"\n            onClick={() =>\n              setActiveFlag({ className: \"flags-India\", name: \"INR\" })\n            }\n          >\n            <span className=\"flags flags-India\"></span> &nbsp;INR\n          </li>\n          <li\n            className=\"option notranslate \"\n            data-value=\"USD\"\n            data-country=\"United-States\"\n            data-currency-symbol=\"$\"\n            data-display=\"USD\"\n            onClick={() =>\n              setActiveFlag({ className: \"flags-United-States\", name: \"USD\" })\n            }\n          >\n            <span className=\"flags flags-United-States\"></span> &nbsp;USD\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { Modal, ModalBody, Row, Col } from \"reactstrap\";\nimport \"./styles.scss\";\nexport interface ILoginProps {}\n\nexport const SignUpPage = (props: any) => {\n  const [isOpen, setOpen] = React.useState(false);\n  React.useEffect(() => setOpen(props.isOpen), [props.isOpen]);\n\n  return (\n    <Row>\n      <Modal\n        isOpen={isOpen}\n        toggle={() => setOpen(!isOpen)}\n        className=\"LoginModal\"\n      >\n        <ModalBody>\n          <div className=\"FormContainer\">\n            <div className=\"SignInText\">Sign Up</div>\n            <Col xs={12} md={12} lg={12}>\n              <div className=\"InputContainer\">\n                <span>First Name * </span>\n                <input className=\"FormInput\" />\n              </div>\n            </Col>\n            <Col xs={12} md={12} lg={12}>\n              <div className=\"InputContainer\">\n                <span>Last Name * </span>\n                <input className=\"FormInput\" />\n              </div>{\" \"}\n            </Col>\n            <Col xs={12} md={12} lg={12}>\n              <div className=\"InputContainer\">\n                <span>Mobile Number * </span>\n                <input className=\"FormInput\" />\n              </div>{\" \"}\n            </Col>\n            <Col xs={12} md={12} lg={12}>\n              <div className=\"InputContainer\">\n                <span>Email Address * </span>\n                <input className=\"FormInput\" />\n              </div>{\" \"}\n            </Col>\n            <Col xs={12} md={12} lg={12}>\n              <div className=\"InputContainer\">\n                <span>Referral Code: </span>\n                <input className=\"FormInput\" />\n              </div>{\" \"}\n            </Col>\n            <Col xs={12} md={12} lg={12}>\n              <div className=\"InputContainer\">\n                <span>Password * </span>\n                <input\n                  placeholder=\"Minimum 8 characters\"\n                  className=\"FormInput\"\n                />\n              </div>{\" \"}\n            </Col>\n            <Col xs={12} md={12} lg={12}>\n              <div className=\"InputContainer\">\n                <span>Confirm Your Password * </span>\n                <input\n                  placeholder=\"Minimum 8 characters\"\n                  className=\"FormInput\"\n                />\n              </div>{\" \"}\n            </Col>\n            <div className=\"FormFooter\">\n              <div className=\"SignInButton\">\n                <button className=\"Button\">Submit</button>\n              </div>\n              <div className=\"SingUpText\">\n                <span>\n                  By creating an account, you agree to Fabindia`s &nbsp;\n                  <span className=\"TextRed\">term of use and privacy</span>\n                </span>\n              </div>\n            </div>\n            <div className=\"AlreadyHave\">\n              <div className=\"NormalText\"> Already Have An Account?</div>\n              <button className=\"SimpleBorder\">Sign In</button>\n            </div>\n          </div>\n        </ModalBody>\n      </Modal>\n    </Row>\n  );\n};\n","import * as React from \"react\";\nimport { Modal, ModalBody, Row, Col } from \"reactstrap\";\nimport \"./styles.scss\";\nexport interface ILoginProps {}\n\nexport const Login = (props: any) => {\n  const [isOpen, setOpen] = React.useState(false);\n  React.useEffect(() => setOpen(props.isOpen), [props.isOpen]);\n\n  return (\n    <Row>\n      <Modal\n        isOpen={isOpen}\n        toggle={() => setOpen(!isOpen)}\n        className=\"LoginModal\"\n      >\n        <ModalBody>\n          <div className=\"FormContainer\">\n            <div className=\"SignInText\">Sign In</div>\n            <Col xs={12} md={12} lg={12}>\n              <div className=\"InputContainer\">\n                <span>Email Address * </span>\n                <input className=\"FormInput\" />\n              </div>\n            </Col>\n            <Col xs={12} md={12} lg={12}>\n              <div className=\"InputContainer\">\n                <span>Password * </span>\n                <input\n                  placeholder=\"Minimum 8 characters\"\n                  className=\"FormInput\"\n                />\n              </div>{\" \"}\n            </Col>\n            <div className=\"FormFooter\">\n              <div className=\"SignInButton\">\n                <button className=\"Button\">Sign In</button>\n              </div>\n              <div className=\"BottomTextContainer\">\n                <span className=\"TextRed\">Forgot Password?</span>\n                <span>\n                  New to Omin? &nbsp;\n                  <span className=\"TextRed\">Create Account</span>\n                </span>\n              </div>\n            </div>\n          </div>\n        </ModalBody>\n      </Modal>\n    </Row>\n  );\n};\n","import React, { useState } from \"react\";\nimport TreeMenu from \"react-simple-tree-menu\";\nimport {\n  Collapse,\n  Nav,\n  Navbar as RNav,\n  NavbarBrand,\n  NavbarToggler,\n  NavItem,\n} from \"reactstrap\";\nimport { CurrencySwitch } from \"../CurrencySwitch\";\nimport Logo from \"./fabLogo.png\";\nimport \"./navbar.scss\";\nimport navConfig from \"./config.json\";\nimport { SignUpPage } from \"../AccountPage/SignUpPage\";\nimport { Login } from \"../AccountPage/Login\";\n\nconst treeData = [\n  {\n    key: \"first-level-node-1\",\n    label: \"Node 1 at the first level\",\n    nodes: [\n      {\n        key: \"second-level-node-1\",\n        label: \"Node 1 at the second level\",\n        nodes: [\n          {\n            key: \"third-level-node-1\",\n            label: \"Last node of the branch\",\n            nodes: [], // you can remove the nodes property or leave it as an empty array\n          },\n        ],\n      },\n    ],\n  },\n  {\n    key: \"first-level-node-2\",\n    label: \"Node 2 at the first level\",\n  },\n];\n\nconst tree = navConfig.items.map((item) => {\n  const obj = {\n    key: item.id,\n    label: item.displayName,\n    nodes: (item.childCategoriesMain as any).map((i: any) => {\n      return { label: i.displayName, key: i.id, nodes: [] };\n    }),\n  };\n  return obj;\n});\n\nexport const Navbar = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isOpenBurger, setIsOpenBurger] = useState(false);\n  const [activeItem, setActiveItem] = useState(\"\");\n  const [isLogin, isOpenLogin] = useState(false);\n  const [isSignUp, isOpenSignUp] = useState(false);\n  const toggle = () => setIsOpen(!isOpen);\n  console.log(\">> isLogin\", isLogin);\n  return (\n    <RNav color=\"light\" light fixed=\"top\" expand=\"md\">\n       <Login isOpen={isLogin} />\n       <SignUpPage isOpen={isSignUp} />\n      <NavbarBrand>\n        <i\n          className=\"fa fa-bars hidden-lg\"\n          aria-hidden=\"true\"\n          onClick={() => setIsOpenBurger(true)}\n        >\n          {\" \"}\n        </i>\n        <a href=\"/\">\n          {\" \"}\n          <img\n            className=\"LogoOnHamburger\"\n            width=\"120px\"\n            src={Logo}\n            alt=\"Logo\"\n          />\n        </a>\n      </NavbarBrand>\n      <div\n        className={`HambburgerSideMenu ${\n          isOpenBurger ? \"HM-open\" : \"HM-close\"\n        }`}\n      >\n        <div className=\"MainLogo\">\n          {\" \"}\n          <a href=\"/\">\n            {\" \"}\n            <img\n              className=\"LogoOnHamburger\"\n              width=\"120px\"\n              src={Logo}\n              alt=\"Logo\"\n            />\n          </a>\n        </div>{\" \"}\n        <div className=\"AuthButtons\">\n          <div onClick={() => isOpenLogin(true)}>Login</div>\n          &nbsp;&nbsp;\n          <div onClick={() => isOpenSignUp(true)}>SignUp</div>\n        </div>\n        <div className=\"TreeNode hidden-lg\">\n          <TreeMenu data={tree as any} hasSearch={false} />\n        </div>{\" \"}\n        <i\n          onClick={() => setIsOpenBurger(false)}\n          className=\"fa fa-times\"\n          aria-hidden=\"true\"\n        ></i>\n      </div>\n      <NavbarToggler onClick={toggle} />\n      <div className=\"MyNavContainer\">\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <div className=\"SearchInp\">\n                {\" \"}\n                <input\n                  className=\"SearchInput\"\n                  placeholder=\"Enter your search text here...\"\n                />\n                <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n              </div>\n            </NavItem>\n          </Nav>\n          <div onClick={() => isOpenLogin(!isLogin)}>Login</div>\n          &nbsp;&nbsp;\n          <div onClick={() => isOpenSignUp(!isSignUp)}>SignUp</div>\n          <CurrencySwitch />\n          {/* <NavbarText>\n            Sign In | Sign Up | Track Your Order | Store Locator\n          </NavbarText> */}\n        </Collapse>\n\n        <div className=\"MenuItemContainer hidden-xs \">\n          {navConfig.items.map((itemData, index) => {\n            return (\n              <>\n                <div\n                  onMouseEnter={() => setActiveItem(itemData.repositoryId)}\n                  className=\"NavItem\"\n                  key={index}\n                >\n                  {itemData.displayName}\n                  <i className=\"fa fa-chevron-down\"></i>\n                  {activeItem === itemData.repositoryId && (\n                    <div\n                      onMouseLeave={() => setActiveItem(\"\")}\n                      className=\"HoverElement\"\n                    >\n                      <h1>Items Goes Here for {itemData.displayName}</h1>\n                    </div>\n                  )}\n                </div>\n              </>\n            );\n          })}\n        </div>\n      </div>\n    </RNav>\n  );\n};\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Navbar } from \"../Navbar\";\n\nexport interface IBasePageProps {}\n\nexport class BasePageImpl extends React.PureComponent<IBasePageProps, {}> {\n  render() {\n    return (\n      <div className=\"BasePage\">\n        <Navbar />\n        {this.props.children}\n        {/* <Footer /> */}\n      </div>\n    );\n  }\n}\nexport function mapStateToProps() {\n  return {};\n}\nexport const BasePage = connect<{}, {}, IBasePageProps>(mapStateToProps)(\n  BasePageImpl\n);\n","import * as React from \"react\";\nimport { Modal, ModalBody } from \"reactstrap\";\n\nexport const StoreSelectionModal = (props: {\n  storeData: any[];\n  onStoreClick: (store: any) => void;\n}) => {\n  const [isOpen, setModalOpen] = React.useState(false);\n  React.useEffect(() => setModalOpen(props.storeData.length > 0), [\n    props.storeData,\n  ]);\n\n  return (\n    <Modal\n      className=\"StoreModal\"\n      isOpen={isOpen}\n      toggle={() => setModalOpen(false)}\n    >\n      <ModalBody>\n        <div className=\"detail-data OnModal pro-details\">\n          <input\n            className=\"input\"\n            placeholder=\"Enter a Pincode or Store Name\"\n          />\n          <button className=\"add\">Search</button>\n        </div>\n        {/* <div className=\"HeadText\">Hurray! We're now open.</div> */}\n        {props.storeData.map((store: any) => {\n          return (\n            <div\n              className=\"StoreDetails\"\n              onClick={() => {\n                setModalOpen(false);\n                props.onStoreClick(store);\n              }}\n            >\n              <div className=\"Manager\">{store.storeManager}</div>\n              <div className=\"Contact\">\n                {\" \"}\n                <span>Contact No. </span>\n                {store.phoneNo}\n              </div>\n              {/* <h4>STORE NAME</h4> */}\n              <div className=\"StoreName\">{store.storeName}</div>\n              <h4>OPEN TIMIINGS</h4>\n              <div className=\"Timing\">\n                <span>Customer Entry on</span> {store.operationalDays} -{\" \"}\n                {store.operationalTime}\n              </div>\n            </div>\n          );\n        })}\n      </ModalBody>\n    </Modal>\n  );\n};\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport Axios from \"axios\";\nimport { ProductModel } from \"../../models/ProductModel\";\nimport { Row, Col } from \"reactstrap\";\nimport \"./productDetail.scss\";\nimport { IHistory } from \"../../interfaces\";\nimport { store } from \"../../store\";\nimport { StoreSelectionModal } from \"./StoreSelectionModal\";\nimport tdImg1 from \"../../resource/img/t1.jpg\";\nimport tdImg2 from \"../../resource/img/t2.jpg\";\nimport tdImg3 from \"../../resource/img/t3.jpg\";\nimport Slider from \"react-slick\";\nimport { isIPad, isMobile } from \"../../generalUtils\";\n\nexport interface IProductDetailsProps {\n  match: {\n    params: {\n      id: string;\n    };\n  };\n  history: IHistory;\n}\n\nexport interface IStoreDetails {\n  operationalDays?: string;\n  operationalTime?: string;\n  phoneNo?: string;\n  servicablePinCode?: string;\n  storeAddress?: string;\n  storeCode?: string;\n  storeManager?: string;\n  storeName: string;\n}\n\nexport class ProductDetailsImpl extends React.Component<\n  IProductDetailsProps,\n  {\n    productDetails: any;\n    storePinCode: string;\n    storeError: boolean;\n    storeDetails: IStoreDetails[];\n    codeErrorStore: boolean;\n    availableError: boolean;\n    codeErrorDel: boolean;\n    selectedStore: IStoreDetails;\n    isDeliverable: boolean;\n    detailHeight: string;\n  }\n> {\n  state = {\n    codeErrorStore: false,\n    availableError: false,\n    detailHeight: \"none\",\n    isDeliverable: false,\n    codeErrorDel: false,\n    storeError: false,\n    selectedStore: {\n      storeName: \"\",\n    },\n    storeDetails: [],\n    storePinCode: \"\",\n    productDetails: {\n      name: \"\",\n      code: \"\",\n      sizeScaleProductType: \"\",\n      whitePrice: {\n        price: \"\",\n        value: \"\",\n      },\n      images: [{ url: \"\" }],\n      description: \"\",\n    },\n  };\n\n  async componentDidMount() {\n    const id = this.props.match.params.id;\n    const productData = ProductModel.get(id);\n    if (!productData) {\n      this.props.history.push(\"/product-list\");\n      return;\n    }\n\n    const productCode = id.split(\"_\")[0] + id.split(\"_\")[2];\n    const response = await Axios.get(\n      `https://apidojo-hm-hennes-mauritz-v1.p.rapidapi.com/products/detail?country=us&lang=en&productcode=${productCode}`,\n      {\n        headers: {\n          \"x-rapidapi-host\": \"apidojo-hm-hennes-mauritz-v1.p.rapidapi.com\",\n          \"x-rapidapi-key\":\n            \"3320af976bmsh4cfc14f0be3fcccp1ead0bjsn8d7a9dab2022\",\n          useQueryString: true,\n        },\n      }\n    );\n    this.setState({\n      productDetails: { ...response.data.product, ...productData?.props },\n    });\n  }\n\n  onCheckStore = async () => {\n    // if (isNaN(Number(this.state.storePinCode))) {\n    //   this.setState({\n    //     codeErrorStore: true,\n    //     storeError: false,\n    //   });\n    //   return;\n    // }\n    const storeDetails = await Axios.get(\n      \"https://run.mocky.io/v3/a5693cf1-adf3-4086-96a0-05d35425cd4c\"\n      // `https://www.fabindia.com/ccstorex/custom/v1/fetchStoreDetails?identifier=${this.state.storePinCode}`\n    );\n    if (storeDetails.data.status === \"error\") {\n      this.setState({ storeError: true, codeErrorStore: false });\n      return;\n    }\n    if (storeDetails.data.result) {\n      this.setState({\n        storeDetails: storeDetails.data.result,\n        storeError: false,\n        codeErrorStore: false,\n      });\n    }\n  };\n\n  checkAvailability = async () => {\n    if (!this.state.storePinCode || isNaN(Number(this.state.storePinCode))) {\n      this.setState({\n        codeErrorDel: true,\n        availableError: false,\n        isDeliverable: false,\n      });\n      return;\n    }\n    const storeDetails = await Axios.get(\n      \"https://run.mocky.io/v3/b6cf8fb5-9f0d-4bbd-8633-1c6e8f4aa9fa\"\n      // `https://www.fabindia.com/ccstorex/custom/v1/serviceabilityCheck?postalCode=${this.state.storePinCode}`\n    );\n    const { cod, furniture, prepaid } = storeDetails.data.message;\n    if (!cod && !furniture && !prepaid) {\n      this.setState({\n        availableError: true,\n        isDeliverable: false,\n        codeErrorDel: false,\n      });\n      return;\n    }\n    if (cod || furniture || prepaid) {\n      this.setState({\n        isDeliverable: true,\n        availableError: false,\n        codeErrorDel: false,\n      });\n    }\n  };\n\n  render() {\n    if (!this.state.productDetails) {\n      return \"\";\n    }\n    var settings = {\n      infinite: true,\n      speed: 500,\n      slidesToShow: isIPad() ? 2 : isMobile() ? 1 : 4,\n      slidesToScroll: 1,\n    };\n    const tImages = [\n      tdImg1,\n      tdImg2,\n      tdImg3,\n      tdImg1,\n      tdImg2,\n      tdImg3,\n      tdImg1,\n      tdImg2,\n      tdImg3,\n    ];\n\n    const { productDetails } = this.state;\n    return (\n      <React.Fragment>\n        <div className=\"ProductDetails\">\n          <StoreSelectionModal\n            onStoreClick={(store) => this.setState({ selectedStore: store })}\n            storeData={this.state.storeDetails}\n          />\n          <Row>\n            <Col xs={12} md={12} lg={6}>\n              <div className=\"ProductImage\">\n                <img alt=\"\" src={productDetails.images[0].url} />\n              </div>\n            </Col>\n            <Col xs={12} md={12} lg={6} className=\"Details\">\n              <div className=\"ProductRow ProductName padding-20\">\n                {productDetails.name}\n              </div>\n              <div className=\"ProductRow ProductCode\">\n                Code: &nbsp; {productDetails.code}\n              </div>\n              <div className=\"padding-20\">\n                <div className=\"ProductRow ProductPrice\">\n                  $\n                  {productDetails.whitePrice.price ||\n                    productDetails.whitePrice.value}\n                </div>\n                <div>\n                  {\" \"}\n                  <div className=\"Quantity\">\n                    <i className=\"fa qty fa-plus\" />\n                    <span className=\"qty\">10</span>\n                    <i className=\"fa qty fa-minus\" />\n                  </div>\n                  <div>\n                    <button className=\"add\">ADD TO CART</button>\n                  </div>\n                </div>\n              </div>\n              <div className=\"padding-20\">\n                <div className=\"head\">Check Delivery Service Availability</div>\n                <div className=\"detail-data pro-details\">\n                  {\" \"}\n                  <div>Check Delivery Service Availability</div>\n                  <input\n                    onChange={(e) =>\n                      this.setState({ storePinCode: e.target.value })\n                    }\n                    className=\"input\"\n                    placeholder=\"Enter Pincode\"\n                  />\n                  <button onClick={this.checkAvailability} className=\"check\">\n                    Check\n                  </button>\n                </div>\n                {this.state.isDeliverable && (\n                  <span style={{ color: \"green\" }}>Service is available</span>\n                )}\n                {this.state.availableError && (\n                  <span style={{ color: \"red\" }}>\n                    This item cannot be delivered at the provided pincode.\n                  </span>\n                )}\n                {this.state.codeErrorDel && (\n                  <span style={{ color: \"red\" }}>\n                    Please enter a valid pincode\n                  </span>\n                )}\n              </div>\n              <div className=\"StoreCheckMain\">\n                <div className=\"StoreSelection\">\n                  <i className=\"fa fa-home\"></i>\n                  <span>Home Delivery</span>\n                </div>\n                <div onClick={this.onCheckStore} className=\"StoreSelection\">\n                  <i className=\"fa fa-truck\"></i>\n                  {this.state.selectedStore.storeName ? (\n                    <span>\n                      {this.state.selectedStore.storeName}\n                      <button onClick={this.onCheckStore}>Change Store</button>\n                    </span>\n                  ) : (\n                    <span>Store Pickup</span>\n                  )}\n                </div>\n                {/* <div className=\"head\">Connect To A Store</div>\n                <div className=\"detail-data pro-details\">\n                  <input\n                    className=\"input\"\n                    onChange={(e) =>\n                      this.setState({ storePinCode: e.target.value })\n                    }\n                    placeholder=\"Enter a Pincode or Store Name\"\n                  />{\" \"}\n                  <button onClick={this.onCheckStore} className=\"add\">\n                    Connect To A Store\n                  </button>\n                </div>\n                {this.state.storeError && (\n                  <span style={{ color: \"red\" }}>\n                    This item cannot be delivered at the provided pincode.\n                  </span>\n                )}\n                {this.state.codeErrorStore && (\n                  <span style={{ color: \"red\" }}>\n                    Please enter a valid pincode\n                  </span>\n                )} */}\n              </div>\n              <div className=\"ProductRow padding-20 ProductDesc\">\n                <div\n                  onClick={() =>\n                    this.setState({\n                      detailHeight:\n                        this.state.detailHeight === \"block\" ? \"none\" : \"block\",\n                    })\n                  }\n                  className=\"head\"\n                >\n                  {this.state.detailHeight === \"none\" ? (\n                    <i className=\"fa fa-plus\"></i>\n                  ) : (\n                    <i className=\"fa fa-minus\"></i>\n                  )}{\" \"}\n                  Details\n                </div>\n                <div\n                  style={{ display: this.state.detailHeight }}\n                  className=\"pro-details\"\n                >\n                  {productDetails.description}\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </div>\n        <div className=\"FeaturedItems\">\n          <div className=\"Featured\">You May Also Like</div>\n          <Slider {...settings}>\n            {[1, 2, 3, 4, 5, 6, 7, 8].map((x, i) => {\n              return (\n                <div key={i} className=\"TradCarouselSlide\">\n                  <img src={tImages[i]} alt=\"\" className=\"SlideImageTrad\" />\n                </div>\n              );\n            })}\n          </Slider>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\nexport function mapStateToProps(state: any, ownProps: any) {\n  return {\n    state,\n  };\n}\nexport const ProductDetails = withRouter(\n  connect<{}, {}, IProductDetailsProps>(mapStateToProps)(ProductDetailsImpl)\n);\n","import { Route, Switch } from \"react-router\";\nimport { HashRouter } from \"react-router-dom\";\nimport React from \"react\";\nimport { BasePage } from \"./components/BasePage\";\nimport { ProductDetails } from \"./components/ProductDetails\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nconst Home = React.lazy(() =>\n  import(\"./components/Home\").then(({ Home }) => ({\n    default: Home,\n  }))\n);\nconst SideCarousel = React.lazy(() =>\n  import(\"./components/docs\").then(({ SideCarousel }) => ({\n    default: SideCarousel,\n  }))\n);\nconst ProductList = React.lazy(() =>\n  import(\"./components/ProductList\").then(({ ProductList }) => ({\n    default: ProductList,\n  }))\n);\n\nconst WrappedComponent = (Component: any) => {\n  return class Wrapper extends React.Component {\n    render() {\n      return (\n        <BasePage>\n          <Component />\n        </BasePage>\n      );\n    }\n  };\n};\n\n// const NotFound = () => <h1>404 Not Found</h1>;\n\nexport const Routes = () => {\n  return (\n    <HashRouter>\n      <React.Suspense fallback={<div className=\"loading-bar loading-bar--active\"></div>}>\n        <Switch>\n          <React.Fragment>\n            <Route exact path=\"/\" component={WrappedComponent(Home)} />\n            <Route\n              exact\n              path=\"/lib/docs\"\n              component={WrappedComponent(SideCarousel)}\n            />\n            <Route\n              exact\n              path=\"/product-list\"\n              component={WrappedComponent(ProductList)}\n            />\n            <Route\n              exact\n              path=\"/product-detail/:id\"\n              component={WrappedComponent(ProductDetails)}\n            />\n          </React.Fragment>\n        </Switch>\n      </React.Suspense>\n    </HashRouter>\n  );\n};\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store/index\";\nimport { Routes } from \"./Routes\";\nimport \"antd/dist/antd.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport \"./main.scss\";\n\nconst App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <Routes />\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import { IActionType } from \"./interfaces\";\nimport { store } from \"./store/index\";\n\nexport function dispacthAction<T extends IActionType>(action: T) {\n  if (action as IActionType) {\n    store.dispatch(action);\n  }\n  return store.dispatch<{ type: string }>(action);\n}\n\nexport const isMobile = () =>\n  navigator.appVersion.toString().toLowerCase().includes(\"iphone\") ||\n  navigator.appVersion.toString().toLowerCase().includes(\"android\");\n\nexport const isIPad = () =>\n  navigator.appVersion.toString().toLowerCase().includes(\"ipad\");\n","import { combineReducers } from \"redux\";\nimport { modelReducer } from './modelReducer';\n\nexport const rootReducer = combineReducers({\n    model: modelReducer\n})","import { OrderedMap } from \"immutable\";\nimport {\n  DELETE_ALL_INSTANCE,\n  DELETE_INSTANCE,\n  SAVE_ALL_INSTANCE,\n  SAVE_INSTANCE,\n  UPDATE_INSTANCE\n} from \"../constants/actionTypes\";\nimport { IActionType } from \"../interfaces\";\n\n/**\n * Usage: This the logic container to save the BaseModel instance to the store.\n * @param {*} [state=OrderedMap({})]\n * @param {IActionType} action\n * @returns\n */\nexport const modelReducer = (state = OrderedMap({}), action: IActionType) => {\n  const { type, instances, instance, id } = action;\n  const modelId = id as string;\n  switch (type.split(\"/\")[1]) {\n    case SAVE_INSTANCE:\n      return state.set(modelId, instance);\n    case SAVE_ALL_INSTANCE:\n      return state.merge(instances);\n    case UPDATE_INSTANCE:\n      return state.set(modelId, instance);\n    case DELETE_INSTANCE:\n      return state.delete(modelId);\n    case DELETE_ALL_INSTANCE:\n      return state.deleteAll(modelId);\n    default:\n      return state;\n  }\n};\n","import { createStore, Store } from \"redux\";\nimport { devToolsEnhancer } from 'redux-devtools-extension';\nimport { IReduxStore } from '../interfaces';\nimport { rootReducer } from '../reducers/index';\n\nfunction configureStore(): Store<IReduxStore> {\n    return createStore(rootReducer, devToolsEnhancer({ name: 'ReactORM' }));\n}\n\nexport const store = configureStore()","module.exports = __webpack_public_path__ + \"static/media/t1.6097cadd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/t2.1c775f44.jpg\";","module.exports = __webpack_public_path__ + \"static/media/t3.30e2b124.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fabLogo.cfcdb977.png\";","import { BaseModel } from \"./BaseModel\";\ninterface IProductModelProps {\n  name: string;\n  images: {\n    url: string;\n  }[];\n  price: {\n    currencyIso: string;\n    value: string;\n  };\n  isFavorite: boolean;\n}\n\nexport class ProductModel extends BaseModel<IProductModelProps> {\n  constructor(props: any) {\n    super(props);\n    this.props = props;\n  }\n  static resource = \"product\";\n}\n","import * as R from \"ramda\";\nimport {\n  saveAllInstances,\n  saveInstance,\n  deleteInstance\n} from \"../actions/modelActions\";\nimport { store } from \"../store/index\";\n\n/**\n * This is the Base Class for all the models which will be created for each resources.\n * Consist of the Utility methods which Saves/Updates/Deletes the data from the Store.\n * The Derived class need to pass a Generic Class <P> i.e. prop types for the Model being Created.\n * @export\n * @class BaseModel\n * @template P\n */\nexport class BaseModel<P> {\n  static resource: string;\n  resource: string;\n  id: string;\n\n  constructor(public props: P & { id: string; _id: string }) {\n    this.props = props;\n    this.id = props.id;\n    this.resource = (this.constructor as typeof BaseModel).resource;\n  }\n\n  /**\n   * Returns the key i.e. the concatination of the ID of current instance with the resource name.\n   * @memberof BaseModel\n   */\n  getStoreKey = (id: string): string => `${this.resource}${id}`;\n\n  /**\n   * Returns the key i.e. the concatination of the ID of current instance with the resource name.\n   * It is static so that the static method inside this class should have access to the same.\n   * @static\n   * @memberof BaseModel\n   */\n  static getStoreKey = (id: string, instance: any): string =>\n    `${instance.resource}${id}`;\n\n  /**\n   * Saves an instance of the current class to the Store, the key is the resourceName+ID of the data.\n   * Accepts both @props id and _id(Support for MONGO)\n   * @returns {BaseModel<P>}\n   * @memberof BaseModel\n   */\n  $save(): BaseModel<P> {\n    saveInstance(\n      this.resource,\n      this.getStoreKey(this.props.id || this.props._id),\n      this\n    );\n    return this;\n  }\n\n  /**\n   * Saves an array of instances to the Store, the instance map is getting created over here and is being saved to the store.\n   * @returns {BaseModel<P>[]}\n   * @memberof BaseModel\n   */\n  $saveAll(): BaseModel<P>[] {\n    let instanceObject: any = {};\n    R.map(x => {\n      return (instanceObject[this.getStoreKey(x.id)] = {\n        props: x,\n        resource: this.resource\n      });\n    }, this.props as any);\n    saveAllInstances(this.resource, instanceObject);\n    return [this];\n  }\n\n  /**\n   * Returns the instance which matches the ID passed in the parameter of this function.\n   * The return value contains props.\n   * @static\n   * @param {string} id\n   * @param {*} [state=store.getState()]\n   * @returns\n   * @memberof BaseModel\n   */\n  static get(id: string, state = store.getState()) {\n    return state.model.get(this.getStoreKey(id, this));\n  }\n\n  /**\n   * Returns the list of all the instances of the current class.\n   * It uses resource name to match the instance to the current instance and then returns the filtered value.\n   * @static\n   * @param {*} [state=store.getState()]\n   * @returns\n   * @memberof BaseModel\n   */\n  static list(state = store.getState()) {\n    return R.values(\n      state.model\n        .filter((x: { resource: string; props: any }) =>\n          x.resource === this.resource ? x.props : \"\"\n        )\n        .toJS()\n    );\n  }\n\n  /**\n   * Deletes an instances matching the ID passed in the parameter.\n   * @static\n   * @param {BaseModel<any>} instance\n   * @returns\n   * @memberof BaseModel\n   */\n  static delete(instance: BaseModel<any>) {\n    deleteInstance(\n      this.getStoreKey(instance.props.id || instance.props._id, instance)\n    );\n    return this;\n  }\n}\n","import { dispacthAction } from \"../generalUtils\";\nimport {\n  SAVE_INSTANCE,\n  DELETE_INSTANCE,\n  DELETE_ALL_INSTANCE,\n  SAVE_ALL_INSTANCE\n} from \"../constants/actionTypes\";\nimport { BaseModel } from \"../models/BaseModel\";\n\n/**\n * Usage: To save the instance to the Store, called in the BaseModel.\n * @param {string} identifier\n * @param {string} id\n * @param {BaseModel<{}>} instance\n */\nexport const saveInstance = (\n  identifier: string,\n  id: string,\n  instance: BaseModel<{}>\n) =>\n  dispacthAction({\n    type: `${identifier}/${SAVE_INSTANCE}`,\n    id,\n    instance\n  });\n\n/**\n * Usage: Saves all the instances to the store, accepts the instance map and merges it into the Store state.\n * @param {string} identifier\n * @param {BaseModel<{}>[]} instances\n */\nexport const saveAllInstances = (\n  identifier: string,\n  instances: BaseModel<{}>[]\n) =>\n  dispacthAction({\n    type: `${identifier}/${SAVE_ALL_INSTANCE}`,\n    instances\n  });\n\n/**\n * Usage: Deletes an instance of the BaseModel from the Store.\n * @param {string} key\n */\nexport const deleteInstance = (key: string) =>\n  dispacthAction({\n    type: DELETE_INSTANCE,\n    key\n  });\n\n/**\n * Usage: To delete all the instances from the store.\n * @param {string[]} keys\n */\nexport const deleteAllInstance = (keys: string[]) =>\n  dispacthAction({\n    type: DELETE_ALL_INSTANCE,\n    keys\n  });\n"],"sourceRoot":""}